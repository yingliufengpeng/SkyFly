public java.lang.Object generate(Object[] references) {
        return new SpecificUnsafeRowJoiner();
        }

class SpecificUnsafeRowJoiner extends org.apache.spark.sql.catalyst.expressions.codegen.UnsafeRowJoiner {
    private byte[] buf = new byte[64];
    private UnsafeRow out = new UnsafeRow(414);



    public UnsafeRow join(UnsafeRow row1, UnsafeRow row2) {
// row1: 48 fields, 1 words in bitset
// row2: 366, 6 words in bitset
// output: 414 fields, 7 words in bitset
        final int sizeInBytes = row1.getSizeInBytes() + row2.getSizeInBytes() - 0;
        if (sizeInBytes > buf.length) {
            buf = new byte[sizeInBytes];
        }

        final java.lang.Object obj1 = row1.getBaseObject();
        final long offset1 = row1.getBaseOffset();
        final java.lang.Object obj2 = row2.getBaseObject();
        final long offset2 = row2.getBaseOffset();

        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 0, Platform.getLong(obj1, offset1 + 0) | (Platform.getLong(obj2, offset2) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 8, (Platform.getLong(obj2, offset2 + 0) >>> (64 - 48)) | (Platform.getLong(obj2, offset2 + 8) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 16, (Platform.getLong(obj2, offset2 + 8) >>> (64 - 48)) | (Platform.getLong(obj2, offset2 + 16) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 24, (Platform.getLong(obj2, offset2 + 16) >>> (64 - 48)) | (Platform.getLong(obj2, offset2 + 24) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 32, (Platform.getLong(obj2, offset2 + 24) >>> (64 - 48)) | (Platform.getLong(obj2, offset2 + 32) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 40, (Platform.getLong(obj2, offset2 + 32) >>> (64 - 48)) | (Platform.getLong(obj2, offset2 + 40) << 48));
        Platform.putLong(buf, Platform.BYTE_ARRAY_OFFSET + 48, Platform.getLong(obj2, offset2 + 40) >>> (64 - 48));


// Copy fixed length data for row1
        Platform.copyMemory(
                obj1, offset1 + 8,
                buf, Platform.BYTE_ARRAY_OFFSET + 56,
                384);


// Copy fixed length data for row2
        Platform.copyMemory(
                obj2, offset2 + 48,
                buf, Platform.BYTE_ARRAY_OFFSET + 440,
                2928);


// Copy variable length data for row1
        long numBytesVariableRow1 = row1.getSizeInBytes() - 392;
        Platform.copyMemory(
                obj1, offset1 + 392,
                buf, Platform.BYTE_ARRAY_OFFSET + 3368,
                numBytesVariableRow1);


// Copy variable length data for row2
        long numBytesVariableRow2 = row2.getSizeInBytes() - 2976;
        Platform.copyMemory(
                obj2, offset2 + 2976,
                buf, Platform.BYTE_ARRAY_OFFSET + 3368 + numBytesVariableRow1,
                numBytesVariableRow2);

        long existingOffset;


        out.pointTo(buf, sizeInBytes);

        return out;
    }
}